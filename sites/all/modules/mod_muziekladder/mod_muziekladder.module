<?php
/**
 * implements hook_menu
**/
function mod_muziekladder_menu(){
  $methods = array( 'nieuws','muziek','gig','uitgaan','locaties','getgeo','search', 'muziekformulier', 'muziekdata');
  $items = array();
  foreach($methods as $method){
    $items[$method] = array (
      'page callback'     => 'mod_muziekladder_index',
      'access callback'   => TRUE,
    );
  }
  return $items;
}

function mod_muziekladder_init(){
  require_once (dirname(__FILE__).'/app/bootstrap.php');
  require_once('controller.php');
  drupal_add_library('system', 'jquery.cookie');
}

function mod_muziekladder_index($arg = false){
  mod_muziekladder_init();
  //set javascript settings:
  $js_settings = array('muziekladderBasePath' => MUZIEKLADDER_BASE_PATH);
  drupal_add_js(array('muziekladder'=>$js_settings), 'setting');
  $bp = drupal_get_path('module','mod_muziekladder');

  drupal_add_js($bp . '/js/laad.js',array('type'=>'file','scope'=>'footer'));
  drupal_add_js($bp . '/js/main.js',array('type'=>'file','scope'=>'footer'));
  //route the path to a controller:

  if ($arg !== '<front>') {
    $aRequest = explode('/',MUZIEKLADDER_REQUEST_PATH);
  } else {
    //home page
    $aRequest = array('front');
  }

  if (in_array($aRequest[0],array('nl','en'))){
    array_shift($aRequest);
  }

  require_once ($aRequest[0].'.php');
  if (!isset($aRequest[1])) $aRequest[1] = 'index';

  $classname =  ucfirst($aRequest[0]);
  $methodname =  $aRequest[1];

  $obj = new $classname;
  if (!in_array($classname, array('Muziek','Uitgaan','Locaties' )) &&
      !preg_match('/20[0-9]+/',$methodname)
          && !method_exists($obj, $methodname)){
    return MENU_NOT_FOUND;
  }

  $result = $obj->$methodname($arg);

  if (isset($result['render_array'])) {
    return $result['render_array'];
  } elseif (isset($result['#type']) && $result['#type']== 'ajax'){
    return $result; 
  } elseif (isset($result['html'])){
    $render_array = array(
      'agenda_content'=>array(
        '#type'=>'markup',
        '#markup'=>$result['html'],
      ),
    );
    return $render_array;
  } elseif (isset($result['json'])) {
    drupal_json_output($result['json']);
  } elseif (isset($result['html_fragment']) || isset($result['json_string'])) {
    // responding to an ajax request
    if (isset( $result['html_fragment'])){
      echo $result['html_fragment'];
    }else{
      drupal_add_http_header('Content-Type','application/json; charset=utf-8');
      echo $result['json_string'];
    }

    // Perform end-of-request tasks.
    drupal_page_footer();
    drupal_exit();
  }
}


function mod_muziekladder_page_build(&$page){
  if (drupal_is_front_page()){
    mod_muziekladder_index('<front>');
  }
}
/**
 * block definitions
 **/
function mod_muziekladder_block_info() {
  $blocks = array();
  $blocks['muziekladder_nieuws_block'] = array(
    'info' => 'muziekladder nieuws blocks 0',
  );
  $blocks['muziekladder_nieuws_block_1'] = array(
    'info' => 'muziekladder nieuws blocks 1',
  );
  $blocks['muziekladder_nieuws_block_2'] = array(
    'info' => 'muziekladder nieuws blocks 222',
  );

  return $blocks;
}

function mod_muziekladder_block_view($delta) {
  //The $delta parameter tells us which block is being requested.
  mod_muziekladder_init();
  require_once ('muziek_block.php');
  $obj = new Muziek_block;
  return  $obj->$delta();
}

function mod_muziekladder_language_switch_links_alter(array &$links, $type, $path) {
  // Get query parameters
  $query = drupal_get_query_parameters();

  foreach ($links as &$link) {
    // Pass through query parameters:
    $link['query'] = $query;
  }
}

/**
* Implements hook_theme
**/
function mod_muziekladder_theme($existing, $type, $theme, $path){
  return array(
    'regio_menu' => array(
      'template' => 'regio_menu',
      'path' => $path.'/theme',
      'variables' => array()
    ),
    'tip_node' => array(
      'template' => 'tip_node',
      'path' => $path.'/theme',
      'variables' => array()
    ),

    'crumb_trail' => array(
      'template' => 'crumb_trail',
      'path' => $path.'/theme',
      'variables' => array()
    ),
    'locatie_reviews_body' => array(
      'template' => 'locatie_reviews_body',
      'path' => $path.'/theme',
      'variables' => array()
    ),
    'agenda_header' => array(
      'template' => 'agenda_header',
      'path' => $path.'/theme',
      'variables' => array(
          'prevlink'=>NULL,
          'nextlink'=>NULL
      )
    ),
    'searchresult' => array(
      'template' => 'searchresult',
      'path' => $path.'/theme',
      'variables' => array()
    ),
    'locaties' => array(
      'template'=>'locaties',
      'path' => $path.'/theme',
      'variables' => array()
    ),
    'uitgaan' => array(
      'template'=>'uitgaan',
      'path' => $path.'/theme',
      'variables' => array()
    ),
    'gig' => array(
      'template' => 'gig',
      'path' => $path.'/theme',
      'variables' => array()
    ),
    'agenda_city_gig' => array(
      'template' => 'agenda_city_gig',
      'path' => $path.'/theme',
      'variables' => array()
    ),
    'agenda_city_nav' => array(
      'template' => 'agenda_city_nav',
      'path' => $path.'/theme',
      'variables' => array()
    ),
    'city_menu' => array(
      'template' => 'city_menu',
      'path' => $path.'/theme',
      'variables' => array()
    ),
  );
}


function mod_muziekladder_preprocess_html(&$vars) {
  global $language;

  require_once (dirname(__FILE__).'/app/bootstrap.php');
  $aliases = explode('/',MUZIEKLADDER_REQUEST_PATH);
  $predefined = array(
    'muziekformulier'=>'muziekformulier',
    'muziek'=>'dagoverzicht',
    'gig'=>'detail',
    'uitgaan'=>'locaties',
    'locaties'=>'locationPage',
    'search'=>'zoekpagina',
  );
  if (isset($aliases[0])){
    if ($aliases[0] == $language->prefix) array_shift($aliases);

    if (isset($aliases[0]) && isset($predefined[$aliases[0]])){
      $vars['classes_array'][] = $predefined[$aliases[0]];
    }
  }
  set_vars_from_singleton($vars,array('head_title','desc_metatag'));
}

function set_vars_from_singleton(&$vars,$singleton_vars_to_look_at) {
  $singleton = Singleton::get_instance();
  foreach($singleton_vars_to_look_at as $value){
    if ($setvalue = $singleton->$value){
      $vars[$value] = $setvalue;
    }
  }
  if ($body_class = $singleton->body_class){
     $vars['classes_array'][] =  $body_class;
  }
}


function mod_muziekladder_preprocess_page(&$vars) {
  set_vars_from_singleton($vars,array('crumbs','title','city_menu','after_content','agenda','var1','regio_menu'));

  if (isset($vars['node']) && node_type_get_name($vars['node']) == 'Locatiespagina') {
    $lang_prefix = Muziek_util::lang_url();
    $venue_id = $vars['node']->field_locaties_id['und'][0]['value'];
    $db = new Muziek_db();
    $venue = $db->get_venue($venue_id);

    $vars['crumbs']  = theme('crumb_trail',array(
        'items'=>
          array(
            array(
              'text'=>t('Locations'),
              'link'=>$lang_prefix . 'uitgaan'
            ),
            array(
              'text' => $venue['City_name'],
              'link' => Muziek_util::city_link(
                array(
                  'Id' => $venue['Cityno'],
                  'Name'=> $venue['City_name']
                ),'uitgaan'
              )
            ),
            array(
              'text'=> $venue['Title'],
              'link' =>Muziek_util::locatie_link($venue)
            ),
            array(
              'text' => 'reviews by visitors'
            )
          )
        )
     );
  }
}


function mod_muziekladder_form_alter(&$form, &$form_state, $form_id)
{
    if ($form_id == "user_login_block")
    {
        $form["#validate"][] = "mod_muziekladder_validate_login";
    }
}


function mod_muziekladder_validate_login($form, &$form_state)
{
    // on successful login, the uid is set in form_state.
    if (empty($form_state["uid"]))
    {
        $_GET["destination"] = "user/login";
        drupal_goto("user/login");
    }
}


/** Implements hook_query_TAG_alter().
 *
 * Alter comments query to order by DESC as well as the default ASC.
 */
function mod_muziekladder_query_comment_filter_alter(QueryAlterableInterface $query) {
  $orderby = &$query->getOrderBy();

  // Sorting for threaded comments.
  if (isset($orderby['torder'])) {
    // Sort by root parent first, then normal threaded.
    $query->addExpression("SUBSTRING_INDEX(c.thread, '.', 1)", 'rparent');
    $orderby = array('rparent' => 'DESC') + $orderby;
  }
  // Sorting for flat comments.
  else if (isset($orderby['c.cid'])) {
    $direction = 'DESC';

    $orderby['c.cid'] = $direction;
    $orderby = array('c.created' => $direction) + $orderby;
  }
}
